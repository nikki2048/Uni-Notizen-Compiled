{"keys":[{"path":["title"],"id":"title","weight":1,"src":"title"},{"path":["body"],"id":"body","weight":1,"src":"body"}],"records":[{"i":0,"$":{"0":{"v":"This page has not yet sprouted","n":0.408},"1":{"v":"[Dendron](https://dendron.so/) (the tool used to generate this site) lets authors selective publish content. You will see this page whenever you click on a link to an unpublished page\n\n![](https://foundation-prod-assetspublic53c57cce-8cpvgjldwysl.s3-us-west-2.amazonaws.com/assets/images/not-sprouted.png)","n":0.189}}},{"i":1,"$":{"0":{"v":"Tags","n":1}}},{"i":2,"$":{"0":{"v":"My","n":1}}},{"i":3,"$":{"0":{"v":"Example","n":1}}},{"i":4,"$":{"0":{"v":"2. Semester","n":0.707}}},{"i":5,"$":{"0":{"v":"Lineare Algebra","n":0.707}}},{"i":6,"$":{"0":{"v":"Datenstrukturen und Algorithmen","n":0.577}}},{"i":7,"$":{"0":{"v":"Einführung","n":1},"1":{"v":"\n## Positionsbestimmung\nInformatik = Wissenschaft von der **algorithmischen** Problemlösung.\n- Gegeben: Problem(klasse)\n- Gesucht: (automatisierbare) Lösung aus elementaren Schritten\n\n### Informationsverarbeitung\nRepräsentation/Organisation von Daten:\n- Datenstrukturen\n\n(Schrittweise) Modifikation von Daten:\n- Algorithmen\n\n*Software = Datenstrukturen + Algorithmen*\n\n## Algorithmen\n```text\nDefinition: Schrittweise Modifikation von Daten zur Lösung eines Problems\n```\n\n### Eigenschaften (Donald Knuth)\n- Determinismus\n- Input (# $\\geq$ 0)\n- Output (# $\\geq$ 1)\n- Terminierung\n\n### Analyse von Algorithmen\n- Partielle Korrektheit\n- Totale Korrektheit\n- Komplexität (Speicherplatz, Rechenzeit)\n- Robustheit (bei inkorrekten Eingaben)\n\n- **Komplexität**\n  - Effizienz (Praxistauglichkeit)\n  - Worst / Best / Average case\n  - Wie viel länger dauert die Berechnung, wenn der Input verdoppelt wird?\n  - Gibt es einen besseren Algorithmus? (Problem-Reduktion)\n- **Effizienz**\n  - Problem $\\rightarrow$ Ressourcen\n  - Ressourcen $\\rightarrow$ Problem\n  - Ressourcen-Typen:\n    - Rechenzeit\n    - Speicherplatz\n    - Energieverbrauch\n\n![[2-semester.bus]]\n\n### Top-Down Software-Entwurf\n- Spezifiziere Eingabe / Ausgabe\n- Problemlösung\n  - Beziehungen, Referenzen, Daten\n    - Datenstrukturen\n  - Wesentliche Verarbeitungsschritte\n    - Module, Prozeduren, Algorithmen\n- Analyse\n  - Korrektheit, Aufwand / Komplexität\n- Implementieren / Testen / Dokumentieren\n\n### Software-Entwicklung\n- Datenstrukturen\n  - Statische Beziehungen\n  - (explizite) funktionale Zusammenhänge\n- Algorithmen\n  - Dynamische Prozesse\n  - (implizite) funktionale Zusammenhänge\n\n# Übersicht\n- Datenstrukturen\n  - Konzepte\n  - Standard-Typen\n- Algorithmen\n  - Entwurf und Analyse\n  - Standard-Verfahren\n\n## Datenstrukturen\n- Abstrakte Datentypen\n- Konkrete Datentypen\n\n| Lineare Strukturen | Hierarchische Strukturen | Graph-Strukturen |\n| ------------------ | ------------------------ | -----------------|\n| Arrays <br> Listen <br> Stacks (Keller) <br> Queues (Warteschlangen) | Bäume (Binär, Balanciert, B-, ...) <br> Prioritätswarteschlangen <br> ... | Gerichtet / Ungerichtet <br> Planare Graphen <br> ... |\n\n## Algorithmen\n- Abstrakt\n  - Allgemeine Entwurfsparadigmen\n  - Komplexitätsanalyse\n- Konkret\n  - Sortieren\n  - Suchen\n  - Optimieren\n\n| | **Linear** | **Hierarchisch** | **Graphen** |\n|-|------------|--------------|---------|\n| **Sortieren** | Einfache Verfahren | Höhere Verfahren | Topologisches Sortieren |\n| **Suchen** | Hashing k-Selection | Suchbäume | Traversen |\n| **Optimieren** | Greedy | Dyn. Programming, Divide & Conquer | Spannbäume, kürzeste Pfade Min-Cut |","n":0.06}}},{"i":8,"$":{"0":{"v":"Betriebssysteme und Systemsoftware","n":0.577},"1":{"v":"\n## Einleitung\nLorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.\n\n### Subsection\nLorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.\n\n##### Subsubsection\n```java\npublic static void main(String[] args)\n{\n    System.out.println(\"Hello World\");\n}\n```","n":0.069}}},{"i":9,"$":{"0":{"v":"1. Semester","n":0.707},"1":{"v":"### Achtung!\nDiese Seite befindet sich derzeit im Aufbau und steht aktuell noch nicht zur Verfügung. Schaue bitte später noch mal vorbei. \n","n":0.213}}},{"i":10,"$":{"0":{"v":"Technische Informatik","n":0.707}}},{"i":11,"$":{"0":{"v":"Programmierung","n":1}}},{"i":12,"$":{"0":{"v":"Diskrete Strukturen","n":0.707}}},{"i":13,"$":{"0":{"v":"Analysis für Informatiker","n":0.577}}}]}
